#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        select_line: select_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HOME &kp LS(END)>;
            label = "SELECT_LINE";
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lhmi: left_homerow_mod_index_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS 22 23 24 25 26 27 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 8 9 10 11 12 13 22 23 24 25 26 27 40 41 42 43 44 45 54 55 56 57 58 59 71 72 73 74 75 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 37 38 53 68 69 70 35 36 37 38 52 53 65 66 67 68 69 70 71>;
        };

        lhmm: left_homerow_mod_middle_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 65 66 67 68 69 70 71 72 73 74 75 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75>;
        };

        lhmr: left_homerow_mod_ring_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 65 66 67 68 69 70 71 72 73 74 75 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75>;
        };

        lhmp: left_homerow_mod_pinky_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <RIGHT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 65 66 67 68 69 70 7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 68 69 70 71 72 73 74 75>;
        };

        rhmi: right_homerow_mod_index_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <170>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 65 66 67 68 69 70 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
        };

        rhmm: right_homerow_mod_middle_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 63 64 65 66 69 70 35 36 37 38 52 53 63 64 65 66 67 68 69 70 70 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 46 47 48 49 50 51 60 61 62 63 64 65 66>;
        };

        rhmr: right_homerow_mod_ring_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 65 66 67 68 69 70 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 37 38 46 47 48 49 50 51 52 53 60 61 62 63 64 65 66 67 68>;
        };

        rhmp: right_homerow_mod_pinky_finger {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <LEFT_HAND_KEYS THUMB_KEYS 35 36 37 38 52 53 65 66 67 68 69 70 0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67>;
        };

        bspc: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        sym_tap: sym_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SYM_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };

        multi_caps: multi_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "MULTI_CAPS";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPSLOCK>;
        };

        bspc_cursor: bspc_cursor {
            compatible = "zmk,behavior-hold-tap";
            label = "BSPC_CURSOR";
            bindings = <&mo>, <&bspc>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none             &kp N1        &kp N2        &kp N3         &kp N4         &kp N5  &mo 4                                                                     &mo 4              &kp N6  &kp N7         &kp N8         &kp N9        &kp N0           &none
&kp TAB           &kp Q         &kp W         &kp E          &kp R          &kp T   &none                                                                     &none              &kp Y   &kp U          &kp I          &kp O         &kp P            &multi_caps
&kp ESC           &lhmp LGUI A  &lhmr LALT S  &lhmm LCTRL D  &lhmi LSHFT F  &kp G   &kp LC(LA(LSHFT))  &kp LGUI   &none          &none      &kp RGUI          &kp LA(LC(LSHFT))  &kp H   &rhmi RSHFT J  &rhmm RCTRL K  &rhmr RALT L  &rhmp RGUI SEMI  &kp SQT
&kp LSHFT         &kp Z         &kp X         &kp C          &kp V          &kp B                                 &kp LALT       &kp RALT                                        &kp N   &kp M          &kp COMMA      &kp DOT       &kp FSLH         &kp RSHFT
&kp LA(LC(LGUI))  &kp HOME      &kp PG_UP     &kp PG_DN      &kp END                &lt 3 ESC          &kp ENTER  &kp LCTRL      &kp RCTRL  &bspc_cursor 3 0  &sym_tap 1 SPACE           &kp LBKT       &kp LPAR       &kp RPAR      &kp RBKT         &kp LA(LC(LGUI))
            >;
        };

        symbol {
            bindings = <
&none      &kp CARET  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT  &none                                            &none  &none      &none      &none      &none        &none     &none
&kp EXCL   &kp LBRC   &kp LPAR   &kp RPAR   &kp RBRC   &kp BSLH   &none                                            &none  &none      &none      &none      &none        &none     &none
&kp GRAVE  &kp PIPE   &kp ASTRK  &kp EQUAL  &kp UNDER  &kp AMPS   &none    &kp PRCNT  &none          &none  &none  &none  &kp QMARK  &kp BSPC   &kp TAB    &kp SPACE    &kp RET   &none
&kp DOT    &kp LT     &kp TILDE  &kp MINUS  &kp GT     &kp SLASH                      &kp COLON      &none                &kp SEMI   &kp COLON  &kp COMMA  &kp LS(TAB)  &none     &none
&none      &none      &kp LBKT   &kp RBKT   &kp PLUS              &kp SQT  &kp DQT    &kp QMARK      &none  &none  &none             &kp LSHFT  &kp LCTRL  &kp LALT     &kp LGUI  &none
            >;
        };

        number {
            bindings = <
&none         &kp HOME       &kp PG_UP      &kp PG_DN  &kp END        &none      &kp LS(LG(N5))                                               &none            &kp CARET  &kp LPAR   &kp LBKT   &kp RBKT  &kp RPAR   &none
&select_line  &kp LG(MINUS)  &kp LS(LG(Z))  &kp LG(Z)  &kp LG(PLUS)   &kp LG(X)  &kp LS(LG(NUMBER_4))                                         &none            &kp STAR   &kp N7     &kp N8     &kp N9    &kp MINUS  &none
&kp LG(A)     &kp ENTER      &kp LA(LEFT)   &kp UP     &kp LA(RIGHT)  &kp LG(C)  &kp LG(LC(LS(N4)))    &none  &none      &none      &kp LGUI  &none            &kp EQUAL  &kp N4     &kp N5     &kp N6    &kp PLUS   &kp DQT
&none         &none          &kp LEFT       &kp DOWN   &kp RIGHT      &kp LG(V)                               &none      &kp LALT                              &kp N0     &kp N1     &kp N2     &kp N3    &kp SLASH  &kp UNDER
&none         &kp LGUI       &kp LALT       &kp LCTRL  &kp LSHFT                 &none                 &none  &none      &kp LCTRL  &kp BSPC  &mt LSHFT SPACE             &kp COLON  &kp COMMA  &kp DOT   &none      &none
            >;
        };

        cursor {
            bindings = <
&none  &none  &none  &none  &none  &none  &none                                  &none  &none     &none     &none   &none      &none      &none
&none  &none  &none  &none  &none  &none  &none                                  &none  &none     &none     &none   &none      &none      &none
&none  &none  &none  &none  &none  &none  &none  &none  &none      &none  &none  &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp ENTER  &none
&none  &none  &none  &none  &none  &none                &none      &none                &none     &none     &none   &none      &none      &none
&none  &none  &none  &none  &none         &none  &none  &none      &none  &none  &none            &none     &none   &none      &none      &none
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
